"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Status = _interopRequireDefault(require("./Status.cjs"));

var _TransactionId = _interopRequireDefault(require("./transaction/TransactionId.cjs"));

var _ajv = _interopRequireDefault(require("ajv"));

var _ajvFormats = _interopRequireDefault(require("ajv-formats"));

var hex = _interopRequireWildcard(require("./encoding/hex.cjs"));

var _AccountId = _interopRequireDefault(require("./account/AccountId.cjs"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ajv = new _ajv.default();
(0, _ajvFormats.default)(ajv);
ajv.addFormat("StatusErrorName", {
  type: "string",
  validate: "StatusError"
});
ajv.addFormat("Status",
/** @type {ajv.ForamtValidator<string>} */
{
  validate: (
  /** @type {string} */
  data) => {
    if (typeof data !== "string") {
      return false;
    }

    _Status.default.fromString(data);

    return true;
  }
});
ajv.addFormat("TransactionId", {
  validate: (
  /** @type {string} */
  data) => {
    if (typeof data !== "string") {
      return false;
    }

    _TransactionId.default.fromString(data);

    return true;
  }
});
ajv.addFormat("TransactionHash", {
  validate: (
  /** @type {string} */
  data) => {
    if (typeof data !== "string") {
      return false;
    }

    const bytes = hex.decode(data);
    return bytes.length === 48;
  }
});
ajv.addFormat("AccountId", {
  validate: (
  /** @type {string} */
  data) => {
    if (typeof data !== "string") {
      return false;
    }

    _AccountId.default.fromString(data);

    return true;
  }
});
var _default = ajv;
exports.default = _default;